# ---
# The high-level description of your tile.
# Replace these properties with real values.
#
name: honeycomb # By convention lowercase with dashes
# icon_file: resources/honeycomb.png
icon_file: honeycomb.png
label: Honeycomb Nozzle for PCF
description: Nozzle to send logs to Honeycomb.io
# metadata_version: 1.8                 # Optional, defaults to 1.5

# Global defaults (all optional)
#
# org: test-org                         # Name of org to create for your apps
# space: test-space                     # Name of space to create for your apps
apply_open_security_group: true         # Apply open security group, default: false

# Specify the packages to be included in your tile.
# The format of the section to include depends on the type
# of package you are describing. For fragments of each type
# that you can copy & paste, see:
#
# https://github.com/cf-platform-eng/tile-generator/blob/master/README.md
#
packages:
- name: honeycomb
  type: app
#  label: My fabulous appplication      # Package name for use in human-readable labels in OpsManager
  manifest:
    buildpack: binary_buildpack
    path: ../cloudfoundry-honeycomb-nozzle
    command: ./cloudfoundry-honeycomb-nozzle
    instances: 2
#   memory: 256M

# Include stemcell criteria if you don't want to accept the default.
# Since this stemcell is only used to run pre and post errands, we
# strongly recommend you leave this alone so that your tile always
# runs with the latest stemcell.
#
# stemcell_criteria:
#   os: ubuntu-trusty
#   requires_cpi: false
#   version: '3062'

# Add properties you want to pass to your applications.
# Properties specified here will not be configurable by the user.
#
# properties:
# - name: example_property
#   type: string
#   default: specify a value
#   label: Label for the field on the GUI
#   description: Longer description of the field's purpose

# Uncomment this section if you want to display forms with configurable
# properties in Ops Manager. These properties will be passed to your
# applications as environment variables. You can also refer to them
# elsewhere in this template by using:
#     (( .properties.<property-name> ))
#
forms:
- name: honeycomb_nozzle_properties
  label: Honeycomb Nozzle
  description: Credentials for Honeycomb and PCF Loggregator
  properties:
  - name: honeycomb_writekey
    type: string
    label: Write Key
    description: Available from https://ui.honeycomb.io/account
  - name: honeycomb_samplerate
    type: string
    label: Sample Rate
    description: Rate at which to sample events. integer >= 1
  - name: honeycomb_sendmetrics
    type: string
    label: Send Metrics
    description: Should we send metrics in addition to logs? boolean
  - name: honeycomb_skipssl
    type: string
    label: Skip SSL Verification
    description: skip ssl certificate verification if using self-signed certs. boolean
  - name: honeycomb_apiusername
    type: string
    label: UAA API user account name
    description: user account created via the uaac cli
  - name: honeycomb_apipassword
    type: string
    label: UAA API user account password
    description: password for the user you created with the uaac cli
  - name: honeycomb_apiurl
    type: string
    label: API URL
    description: eg https://api.system_domain

# Add any dependencies your tile has on other installed products.
# This is often appropriate when using automatic service provisioning
# for any of your packages above, with services provided by other
# products.
#
# requires_product_versions:
# - name: p-mysql
#   version: '~> 1.7'

# Customize upgrade parameters if the defaults don't meet your needs.
#
# update:
#   canaries: 1
#   canary_watch_time: 10000-100000
#   max_in_flight: 1
#   update_watch_time: 10000-100000

# If prior versions of your tile are installed and configured, their
# property values will not be overwritten by new defaults provided
# in this file. If that is your intent, you must do the overwriting
# explicitly using JavaScript migration functions, like so:
#
# migration: |
#   properties['properties']['.properties.org']['value'] = 'system';
